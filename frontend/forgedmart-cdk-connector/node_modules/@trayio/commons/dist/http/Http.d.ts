/// <reference types="node" />
import * as O from 'fp-ts/lib/Option';
import { Readable } from 'stream';
import { File } from '../file/File';
import { SerializationFormat } from '../serialization/Serialization';
export type HttpHeaderValue = string | string[];
export type HttpHeaders = Record<string, HttpHeaderValue | HttpContentType>;
export type HttpQueryStringSingleValue = number | string | boolean;
export type HttpQueryStringValue = HttpQueryStringSingleValue | HttpQueryStringSingleValue[];
export type HttpQueryString = Record<string, HttpQueryStringValue>;
export type RegularHttpRequestBody = Readable;
export type MultipartHttpRequestBody = {
    fields: Record<string, string>;
    files: Record<string, File>;
};
export type HttpRequestBody = RegularHttpRequestBody | MultipartHttpRequestBody;
export type HttpRequest = {
    headers: HttpHeaders;
    pathParams: Record<string, string>;
    queryString: HttpQueryString;
    body: HttpRequestBody;
};
export type HttpResponse = {
    statusCode: number;
    headers: HttpHeaders;
    body: Readable;
};
export declare enum HttpMethod {
    Get = "GET",
    Put = "PUT",
    Post = "POST",
    Patch = "PATCH",
    Delete = "DELETE"
}
export declare enum HttpContentType {
    Json = "application/json",
    OctetStream = "application/octet-stream",
    MultipartRequestBody = "multipart/form-data",
    Text = "text/plain"
}
export declare enum HttpHeader {
    Authorization = "Authorization",
    ContentType = "Content-Type",
    Impersonation = "X-Tray-Admin-Impersonate",
    UserAgent = "User-Agent",
    ContentLength = "Content-Length"
}
export interface HttpHeadersInterface {
    get: (headers: HttpHeaders, name: string) => O.Option<HttpHeaderValue>;
    extractBearerToken: (headers: HttpHeaders) => O.Option<string>;
}
export declare const HttpHeaders: HttpHeadersInterface;
export declare const serializationFormatToHttpContentType: Record<SerializationFormat, HttpContentType>;
export declare const isMultiPartBody: (body: HttpRequestBody) => body is MultipartHttpRequestBody;
//# sourceMappingURL=Http.d.ts.map